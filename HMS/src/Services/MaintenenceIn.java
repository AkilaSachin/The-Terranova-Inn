/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Services;

import database.DBconnect;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;


/**
 *
 * @author CJ
 */
public class MaintenenceIn extends javax.swing.JInternalFrame {
    
    Connection con=null;
    PreparedStatement pst=null;
    PreparedStatement pst2=null;
    PreparedStatement pst3=null;
    ResultSet rs=null;

    /**
     * Creates new form MaintenenceIn
     */
    
    public void load_maintenence_info(){
        try{
            searchbox.setVisible(true);
            sbutton.setVisible(true);
            rbutton.setVisible(true);
            
            
            jPanel3.setVisible(true);
            String sql="select MID,main_Type as MaintainanceType,objectName as ObjectName,cost as Cost,startDate as StartDate,est_Finish_Date as EstimatedDate,actualFinishDate as ActualFinishDate,availability as Availability from maintenance_info";
            pst=con.prepareStatement(sql);
            rs=pst.executeQuery();
            
            jTable1.setModel(DbUtils.resultSetToTableModel(rs));
            
        }
        catch (Exception e){
            
        }
    }
    
    public void reset(){
        midbox.setText("");
        mtypebox.setText("");
        namebox.setText("");
        costbox.setText("");
        sdatebox.setCalendar(null);
        efdatebox.setCalendar(null);
        afdatebox.setCalendar(null);
        ava.setSelected(false);
        nava.setSelected(false);
    }
    
    public MaintenenceIn() {
        initComponents();
        
        con=DBconnect.connect();
        
        searchbox.setVisible(false);
        sbutton.setVisible(false);
        rbutton.setVisible(false);
        //sdatebox.setMinSelectableDate(new Date());
        jPanel3.setVisible(false);
        load_maintenence_info();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        mtypebox = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        namebox = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        costbox = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        midbox = new javax.swing.JLabel();
        sdatebox = new com.toedter.calendar.JDateChooser();
        efdatebox = new com.toedter.calendar.JDateChooser();
        afdatebox = new com.toedter.calendar.JDateChooser();
        jPanel3 = new javax.swing.JPanel();
        searchbox = new javax.swing.JTextField();
        sbutton = new javax.swing.JButton();
        rbutton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        ava = new javax.swing.JRadioButton();
        nava = new javax.swing.JRadioButton();
        jButton5 = new javax.swing.JButton();

        setBackground(new java.awt.Color(90, 120, 183));
        setClosable(true);
        setForeground(java.awt.Color.white);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setPreferredSize(new java.awt.Dimension(1060, 610));

        jPanel1.setBackground(new java.awt.Color(90, 120, 183));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Hotel Maintenence", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 24), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel1.setPreferredSize(new java.awt.Dimension(1030, 750));

        jPanel2.setBackground(new java.awt.Color(90, 120, 183));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setForeground(java.awt.Color.white);
        jLabel2.setText("MID");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setForeground(java.awt.Color.white);
        jLabel3.setText("Maintenence Type");

        mtypebox.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setForeground(java.awt.Color.white);
        jLabel4.setText("Object Name");

        namebox.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setForeground(java.awt.Color.white);
        jLabel5.setText("Cost");

        costbox.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setForeground(java.awt.Color.white);
        jLabel6.setText("Start Date");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setForeground(java.awt.Color.white);
        jLabel7.setText("Estimated Finish Date");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel8.setForeground(java.awt.Color.white);
        jLabel8.setText("Actual Finish Date");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel9.setForeground(java.awt.Color.white);
        jLabel9.setText("Availability");

        jButton1.setBackground(new java.awt.Color(68, 145, 162));
        jButton1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("New");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(68, 145, 162));
        jButton2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Save");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(68, 145, 162));
        jButton3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Update");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(68, 145, 162));
        jButton4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Delete");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        midbox.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        midbox.setForeground(new java.awt.Color(255, 255, 255));
        midbox.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        midbox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                midboxMouseClicked(evt);
            }
        });

        sdatebox.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        sdatebox.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                sdateboxPropertyChange(evt);
            }
        });

        efdatebox.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        afdatebox.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jPanel3.setBackground(new java.awt.Color(90, 120, 183));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Maintenance History", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14), new java.awt.Color(255, 255, 255))); // NOI18N

        searchbox.setToolTipText("Use MaintenanceType");
        searchbox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchboxKeyReleased(evt);
            }
        });

        sbutton.setText("Search");
        sbutton.setToolTipText("Use MaintenanceType");
        sbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sbuttonActionPerformed(evt);
            }
        });

        rbutton.setText("Reset");
        rbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbuttonActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 553, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(129, 129, 129)
                .addComponent(searchbox, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sbutton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbutton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sbutton)
                    .addComponent(rbutton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 365, Short.MAX_VALUE))
        );

        ava.setForeground(new java.awt.Color(255, 255, 255));
        ava.setText("Completed");
        ava.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                avaActionPerformed(evt);
            }
        });

        nava.setForeground(new java.awt.Color(255, 255, 255));
        nava.setText("On-going");
        nava.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                navaActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(68, 145, 162));
        jButton5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("Check On-Going Maintenance");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9))
                        .addGap(32, 32, 32)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(costbox, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(midbox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(mtypebox, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
                                .addComponent(namebox))
                            .addComponent(sdatebox, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(efdatebox, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(afdatebox, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ava)
                            .addComponent(nava)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2)
                            .addComponent(midbox, javax.swing.GroupLayout.DEFAULT_SIZE, 21, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(mtypebox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(namebox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(costbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(sdatebox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(efdatebox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(afdatebox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGap(40, 40, 40)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ava, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(nava, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jButton2)
                            .addComponent(jButton3)
                            .addComponent(jButton4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton5)
                        .addGap(2, 2, 2)))
                .addContainerGap(58, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 558, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sbuttonActionPerformed
        // TODO add your handling code here:
        

        String name=searchbox.getText();
        String ser=name + "%";

        try{
            
                String sql="select MID,main_Type as MaintainanceType,objectName as ObjectName,cost as Cost,startDate as StartDate,est_Finish_Date as EstimatedDate,actualFinishDate as ActualFinishDate,availability as Availability from maintenance_info where main_Type like '"+ser+"'";
                pst=con.prepareStatement(sql);
                rs=pst.executeQuery();
                jTable1.setModel(DbUtils.resultSetToTableModel(rs));
            

        }
        catch (Exception e){

        }
    }//GEN-LAST:event_sbuttonActionPerformed

    private void rbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbuttonActionPerformed
        // TODO add your handling code here:
        
        load_maintenence_info();
  
    }//GEN-LAST:event_rbuttonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        reset();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if(midbox.getText().isEmpty() || mtypebox.getText().isEmpty() || namebox.getText().isEmpty() || costbox.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Please fill all fields!", "Aleart!",JOptionPane.ERROR_MESSAGE);
        }
        
        else if(ava.isSelected()==false && nava.isSelected()==false){
                JOptionPane.showMessageDialog(null, "Please select Availability!", "Aleart!",JOptionPane.ERROR_MESSAGE);
            }
        
        else{
        
            String mid=midbox.getText();
            String mt=mtypebox.getText();
            String obn=namebox.getText();
            String ct=costbox.getText();

            SimpleDateFormat dcn = new SimpleDateFormat("yyyy-MM-dd");
            String sdate = dcn.format(sdatebox.getDate() );

            String efd = dcn.format(efdatebox.getDate() );

            //String afd = dcn.format(afdatebox.getDate() );
            String avadb="";
            if(ava.isSelected()==true){
                avadb="Completed";
            }
            if(nava.isSelected()==true){
                avadb="On-Going";
            }
            //String ava=abox.getText();
            //String ava="";
            String etxt="";
            String ntxt=null;
            

            try{
                String q="insert into maintenance_info (main_Type,objectName,cost,startDate,est_Finish_Date,actualFinishDate,availability) values ('"+mt+"','"+obn+"','"+ct+"','"+sdate+"','"+efd+"','"+etxt+"','"+avadb+"')";
                pst=con.prepareStatement(q);
                pst.execute();
                JOptionPane.showMessageDialog(this,"Successfully saved");
                load_maintenence_info();
                reset();
            }
            catch(Exception et){

            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        int x=JOptionPane.showConfirmDialog(null,"Do you really want to update ?");
        
        if(x==0){
           String mid=midbox.getText();
            String mt=mtypebox.getText();
            String obn=namebox.getText();
            String ct=costbox.getText();
        
            SimpleDateFormat dcn = new SimpleDateFormat("yyyy-MM-dd");
            String sdate = dcn.format(sdatebox.getDate() );
        
            String efd = dcn.format(efdatebox.getDate() );
        
            String afd = dcn.format(afdatebox.getDate() );
        
            String todbava="";
            if(ava.isSelected()==true){
                todbava="Completed";
            }
            if(nava.isSelected()==true){
                todbava="On-Going";
            }
            
            String sql="update maintenance_info SET MID='"+mid+"',main_Type='"+mt+"',objectName='"+obn+"',cost='"+ct+"',startDate='"+sdate+"',est_Finish_Date='"+efd+"',actualFinishDate='"+afd+"',availability='"+todbava+"' where MID='"+mid+"'";
            
            try{
                pst=con.prepareStatement(sql);
                pst.execute();
                
                //msgbox
                JOptionPane.showMessageDialog(this,"Successfully upddated");
                
                //load table
                load_maintenence_info();
                reset();
            }
            catch (Exception e){
                
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        int x=JOptionPane.showConfirmDialog(null, "Do you really want to delete this ?");

        if(x==0){
            String id=midbox.getText();
            //String rsts="Available";
            //String sql="delete from emp_assignment_info where guestID='"+id+"'";
            //String sql2="";

            String sql3="SELECT MID,availability from maintenance_info";
            try{
                pst3=con.prepareStatement(sql3);
                rs= pst3.executeQuery(sql3);

                while(rs.next()) {

                    int man=rs.getInt("MID");
                    //String di=rs.getString("DID");
                    String rst=new String(rs.getString("availability"));
                    String sts="Available";

                    if(id.equals(midbox.getText())){
                        if(sts.equals(rst)){
                            String sql="delete from maintenance_info where MID='"+id+"'";
                            pst=con.prepareStatement(sql);
                            pst.execute();

                            //load table
                            load_maintenence_info();
                            reset();
                        }
                        else{
                            JOptionPane.showMessageDialog(null, "Ongoing maintenence!", "Aleart!",JOptionPane.ERROR_MESSAGE);
                            break;
                        }

                    }

                }
            }
            catch(Exception t){

            }
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void midboxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_midboxMouseClicked
        // TODO add your handling code here:
        try {
            String sql = "SELECT MID+1 from maintenance_info";
            pst=con.prepareStatement(sql);
            //pst.setString(1,EmployeeIDSearchField.getText());

            rs= pst.executeQuery(sql);
            while(rs.next()) {
                midbox.setText(rs.getString("MID+1"));
            }
        }
        catch (SQLException e ) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_midboxMouseClicked

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        reset();
        int r=jTable1.getSelectedRow();
            String mid=jTable1.getValueAt(r, 0).toString();
            String mt=jTable1.getValueAt(r, 1).toString();
            String on=jTable1.getValueAt(r, 2).toString();
            String ct=jTable1.getValueAt(r, 3).toString();
            String sd=jTable1.getValueAt(r, 4).toString();
            String ef=jTable1.getValueAt(r, 5).toString();
            String af=jTable1.getValueAt(r, 6).toString();
            String av=jTable1.getValueAt(r, 7).toString();

        midbox.setText(mid);
        mtypebox.setText(mt);
        namebox.setText(on);
        costbox.setText(ct);
        //sdatebox.setCalendar(sd);
        
        java.util.Date date;
        try {
            date = new SimpleDateFormat("yyyy-MM-dd").parse(sd);
            sdatebox.setDate(date);
        } catch (ParseException ex) {
            
        }
        
        java.util.Date date2;
        try {
            date2 = new SimpleDateFormat("yyyy-MM-dd").parse(ef);
            efdatebox.setDate(date2);
        } catch (ParseException ex) {
            
        }
        
        java.util.Date date3;
        try {
            date3 = new SimpleDateFormat("yyyy-MM-dd").parse(af);
            afdatebox.setDate(date3);
        } catch (ParseException ex) {
            
        }
        
        //efdatebox.setCalendar(null);
        //afdatebox.setCalendar(null);
        String comp="Completed";
        String ong="On-Going";
        if(av.equals(comp)){
            ava.setSelected(true);
            nava.setSelected(false);
        }
        if(av.equals(ong)){
            nava.setSelected(true);
            ava.setSelected(false);
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void sdateboxPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_sdateboxPropertyChange
        // TODO add your handling code here:
        efdatebox.setMinSelectableDate(sdatebox.getDate());
        afdatebox.setMinSelectableDate(sdatebox.getDate());
    }//GEN-LAST:event_sdateboxPropertyChange

    private void searchboxKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchboxKeyReleased
        // TODO add your handling code here:
        String name=searchbox.getText();
        String ser=name + "%";

        try{
            
                String sql="select MID,main_Type as MaintainanceType,objectName as ObjectName,cost as Cost,startDate as StartDate,est_Finish_Date as EstimatedDate,actualFinishDate as ActualFinishDate,availability as Availability from maintenance_info where main_Type like '"+ser+"'";
                pst=con.prepareStatement(sql);
                rs=pst.executeQuery();
                jTable1.setModel(DbUtils.resultSetToTableModel(rs));
            

        }
        catch (Exception e){

        }
    }//GEN-LAST:event_searchboxKeyReleased

    private void avaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_avaActionPerformed
        // TODO add your handling code here:
        nava.setSelected(false);
    }//GEN-LAST:event_avaActionPerformed

    private void navaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_navaActionPerformed
        // TODO add your handling code here:
        ava.setSelected(false);
    }//GEN-LAST:event_navaActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        //ReportView r=new ReportView("C:\\Users\\CJ\\Desktop\\ireportttt\\r.jasper");
        ReportView r=new ReportView("C:\\Users\\Akila Sachin\\Documents\\NetBeansProjects\\HMS\\src\\Services\\ongoingMain.jasper");
        r.setVisible(true);
        

// TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser afdatebox;
    private javax.swing.JRadioButton ava;
    private javax.swing.JTextField costbox;
    private com.toedter.calendar.JDateChooser efdatebox;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel midbox;
    private javax.swing.JTextField mtypebox;
    private javax.swing.JTextField namebox;
    private javax.swing.JRadioButton nava;
    private javax.swing.JButton rbutton;
    private javax.swing.JButton sbutton;
    private com.toedter.calendar.JDateChooser sdatebox;
    private javax.swing.JTextField searchbox;
    // End of variables declaration//GEN-END:variables
}
