/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Employee;

import com.sun.glass.events.KeyEvent;
import java.awt.Image;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import javax.swing.JFileChooser;
import java.sql.Statement;

import java.awt.Color;
import database.DBconnect;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.swing.ImageIcon;

import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import net.proteanit.sql.DbUtils;


/**
 *
 * @author Dell
 */
public class Emp_Registration extends javax.swing.JInternalFrame {
    
    Connection con=null;
    PreparedStatement pst=null;
    ResultSet rs=null;
    String path="C:\\Users\\Akila Sachin\\Documents\\NetBeansProjects\\HMS\\src\\Employee\\eimages\\picture.png";

    /**
     * Creates new form Registration
     */
    public Emp_Registration() {
        initComponents();
        //connect to database
        con=DBconnect.connect(); 
        getContentPane().setBackground(new Color(90, 120, 183));
        jPanel1.setOpaque(false);
        jPanel2.setOpaque(false);
        jPanel3.setOpaque(false);
        
        //load table
        tableload();
        
    }
    public void tableload()
    {
        try{
            String sql="SELECT EmpId,NIC,Name,Gender,Contact_number as Tel_No,Job,shift from empdetails";
            pst=con.prepareStatement(sql);
            rs=pst.executeQuery();
            
            jTable1.setModel(DbUtils.resultSetToTableModel(rs));
            
        }
        catch(Exception e)
        {
            System.out.println("Error in getting data from db");
            System.out.println(e.getMessage());
        }
    }
    
     public void Reset()
    {
      id_lbl.setText("");
      nicbox.setText("");
      namebox.setText("");
      dobbox.setDate(null);
      gen_box.setSelectedIndex(0);
      addressbox.setText("");
      contact_nobox.setText("");
      emailbox.setText("");
      jobbox.setText("");
      bsalbox.setText("");
      dojbox.setDate(null);
      shiftc.setSelectedIndex(0);
      path="C:\\Users\\Akila Sachin\\Documents\\NetBeansProjects\\HMS\\src\\Employee\\eimages\\picture.png";
      pic.setIcon(ResiziseImage(path));
      search_txt.setText("");
                           
    }
     public boolean checkId(String id) {
        
        try{
            String sql = "Select 1 from empdetails where empid = ?";  
            PreparedStatement ps = con.prepareStatement(sql);
            ps.setString(1, id);
            ResultSet rs = ps.executeQuery();

            return rs.next();
            
        }
        catch (Exception e)
        {
            System.out.println("Error in checking empID "+e);
        }
        return false;
        
    }
    public ImageIcon ResiziseImage (String ImagePath){
        ImageIcon myimage=new ImageIcon(ImagePath);
        Image img=myimage.getImage();
        Image newimg=img.getScaledInstance(pic.getWidth(),pic.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon image=new ImageIcon(newimg);
        return image;
    }
    
    public static final Pattern VALID_EMAIL_ADDRESS_REGEX = 
    Pattern.compile("^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,6}$", Pattern.CASE_INSENSITIVE);

    public static boolean validate(String emailStr) {
        Matcher matcher = VALID_EMAIL_ADDRESS_REGEX .matcher(emailStr);
        return matcher.find();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        nicbox = new javax.swing.JTextField();
        id_lbl = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        namebox = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        addressbox = new javax.swing.JTextField();
        contact_nobox = new javax.swing.JTextField();
        emailbox = new javax.swing.JTextField();
        jobbox = new javax.swing.JTextField();
        bsalbox = new javax.swing.JTextField();
        gen_box = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();
        shiftc = new javax.swing.JComboBox<>();
        dobbox = new com.toedter.calendar.JDateChooser();
        dojbox = new com.toedter.calendar.JDateChooser();
        submit = new javax.swing.JButton();
        Clear = new javax.swing.JButton();
        Update = new javax.swing.JButton();
        Delete = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        search_txt = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        search = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        pic = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        Attatch = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setClosable(true);
        setPreferredSize(new java.awt.Dimension(1060, 750));
        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "  Employee Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 14))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("EID");

        nicbox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nicboxKeyTyped(evt);
            }
        });

        id_lbl.setText("                                      ");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("NIC");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Name");

        namebox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nameboxKeyTyped(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("DOB");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Gender");

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Address");

        jLabel8.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Contact No");

        jLabel9.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Email");

        jLabel10.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Job Title");

        jLabel11.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Basic Salary");

        jLabel12.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Date Of Join");

        contact_nobox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                contact_noboxKeyTyped(evt);
            }
        });

        jobbox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jobboxKeyTyped(evt);
            }
        });

        bsalbox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                bsalboxKeyTyped(evt);
            }
        });

        gen_box.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Gender", "Male", "Female" }));

        jLabel15.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Shift");

        shiftc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Shift", "Day", "Night" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel5)
                                .addComponent(jLabel6)
                                .addComponent(jLabel10)
                                .addComponent(jLabel7)
                                .addComponent(jLabel8)
                                .addComponent(jLabel9)
                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)
                                .addComponent(jLabel4)
                                .addComponent(jLabel15)
                                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel12))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jobbox)
                            .addComponent(addressbox)
                            .addComponent(contact_nobox)
                            .addComponent(emailbox)
                            .addComponent(bsalbox)
                            .addComponent(gen_box, 0, 216, Short.MAX_VALUE)
                            .addComponent(namebox)
                            .addComponent(shiftc, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(nicbox)
                            .addComponent(id_lbl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE)
                            .addComponent(dobbox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(dojbox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(23, 23, 23))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(id_lbl))
                .addGap(13, 13, 13)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nicbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(namebox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(dobbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(gen_box, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(addressbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(contact_nobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(emailbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jobbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(bsalbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(dojbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15)
                    .addComponent(shiftc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(112, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1);
        jPanel1.setBounds(-11, 0, 360, 570);

        submit.setBackground(new java.awt.Color(68, 145, 162));
        submit.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        submit.setForeground(new java.awt.Color(255, 255, 255));
        submit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Thumbnail.png"))); // NOI18N
        submit.setText("Submit");
        submit.setBorder(null);
        submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitActionPerformed(evt);
            }
        });
        getContentPane().add(submit);
        submit.setBounds(360, 390, 170, 80);

        Clear.setBackground(new java.awt.Color(68, 145, 162));
        Clear.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        Clear.setForeground(new java.awt.Color(255, 255, 255));
        Clear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/CLEAR_D.png"))); // NOI18N
        Clear.setText("Clear");
        Clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearActionPerformed(evt);
            }
        });
        getContentPane().add(Clear);
        Clear.setBounds(870, 390, 170, 80);

        Update.setBackground(new java.awt.Color(68, 145, 162));
        Update.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        Update.setForeground(new java.awt.Color(255, 255, 255));
        Update.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/upadate_D.png"))); // NOI18N
        Update.setText("Update");
        Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateActionPerformed(evt);
            }
        });
        getContentPane().add(Update);
        Update.setBounds(360, 480, 170, 70);

        Delete.setBackground(new java.awt.Color(68, 145, 162));
        Delete.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        Delete.setForeground(new java.awt.Color(255, 255, 255));
        Delete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/delete_D.png"))); // NOI18N
        Delete.setText("Delete");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });
        getContentPane().add(Delete);
        Delete.setBounds(870, 480, 170, 70);

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        search_txt.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        search_txt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                search_txtKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                search_txtKeyTyped(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Employee ID");

        search.setBackground(new java.awt.Color(68, 145, 162));
        search.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        search.setForeground(new java.awt.Color(255, 255, 255));
        search.setText("Search");
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(search_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(search, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                        .addComponent(search_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        getContentPane().add(jPanel2);
        jPanel2.setBounds(357, 188, 680, 60);

        jTable1.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.setCellSelectionEnabled(true);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(357, 256, 680, 120);

        jDesktopPane1.setLayer(pic, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pic, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                .addContainerGap())
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(pic, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(jDesktopPane1);
        jDesktopPane1.setBounds(357, 11, 170, 150);

        jPanel3.setBackground(java.awt.SystemColor.activeCaption);
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        Attatch.setBackground(new java.awt.Color(68, 145, 162));
        Attatch.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        Attatch.setForeground(new java.awt.Color(255, 255, 255));
        Attatch.setText("Attatch");
        Attatch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AttatchActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(68, 145, 162));
        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Employee Details");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(68, 145, 162));
        jButton2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Left Employees");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(200, 200, 200)
                .addComponent(Attatch, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 217, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(Attatch, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(55, 55, 55))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        getContentPane().add(jPanel3);
        jPanel3.setBounds(350, 0, 690, 170);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitActionPerformed
       
        if(nicbox.getText().equals("")){
               JOptionPane.showMessageDialog(this,"Enter NIC");
               return;
        }
        if(!(nicbox.getText().trim().matches("^[0-9]{9}[vVxX]$")))
        {
             JOptionPane.showMessageDialog(null,"Invalid NIC ");
             return;
        }
        if(namebox.getText().equals("")){
               JOptionPane.showMessageDialog(this,"Enter Name");
               return;
        }
              
        if(dobbox.getDate()==null){
               JOptionPane.showMessageDialog(this,"Enter DOB");
               return;
        }
        if (gen_box.getSelectedItem().equals("Select Gender")) {
                JOptionPane.showMessageDialog( this, "Select gender");
                return;
        }
        if(addressbox.getText().equals("")){
               JOptionPane.showMessageDialog(this,"Enter address");
               return;
        }
        if(contact_nobox.getText().equals("")){
               JOptionPane.showMessageDialog(this,"Enter Contact Number");
               return;
        }
        if(emailbox.getText().equals("")){
               JOptionPane.showMessageDialog(this,"Enter email");
               return;
        }
        if(jobbox.getText().equals("")){
               JOptionPane.showMessageDialog(this,"Enter Job");
               return;
        }
        if(bsalbox.getText().equals("")){
               JOptionPane.showMessageDialog(this,"Enter Basic Salary");
               return;
        }
        if(dojbox.getDate()==null){
               JOptionPane.showMessageDialog(this,"Enter Date Of Join");
               return;
        }
        if (shiftc.getSelectedItem().equals("Select Shift")) {
                JOptionPane.showMessageDialog( this, "Select Shift");
                return;
        }
        if(!validate(emailbox.getText()))
        {
            JOptionPane.showMessageDialog( this, "Invaid Email");
            return;
        }
        
        try
        {
            String ni="Select nic from empdetails where nic= '" + nicbox.getText() + "'";
            pst=con.prepareStatement(ni);
            rs=pst.executeQuery();
            
            if(rs.next())
            {
                JOptionPane.showMessageDialog( this, "NIC already exists","Error", JOptionPane.ERROR_MESSAGE);
                //nicbox.setText("");
                return;
            }
        }
        catch(Exception e)
        {
            System.out.println("Error in validating nic"+e);                   
        }
                                      
        String nic=nicbox.getText();
        String name=namebox.getText();
        
        SimpleDateFormat myformat=new SimpleDateFormat("yyyy-MM-dd");
        String dob=myformat.format(dobbox.getDate());
        
        String gender=gen_box.getSelectedItem().toString();
        String address=addressbox.getText();
        String con_no=contact_nobox.getText();
        String email=emailbox.getText();
        String job=jobbox.getText();
        String bsal=bsalbox.getText();
        
        SimpleDateFormat myformat2=new SimpleDateFormat("yyyy-MM-dd");      
        String doj=myformat2.format(dojbox.getDate());
        
        String shift=shiftc.getSelectedItem().toString();
       
        String mpath=path.replace("\\","@");
        
        try{
           String q="INSERT INTO empdetails (nic,name,dob,gender,address,contact_number,email,job,bsal,doj,Shift,image) values ('"+nic+"','"+name+"','"+dob+"','"+gender+"','"+address+"','"+con_no+"','"+email+"','"+job+"','"+bsal +"','"+doj+"','"+shift +"','"+mpath+"')";
                      
           pst=con.prepareStatement(q);
           pst.execute();
           JOptionPane.showMessageDialog(this,"Successfully Inserted");
                                
           //load table
            tableload();
           
        }
        catch(Exception e)
        {
            System.out.println("Error in INSERTING"+e);
        }
       
        
        
        
    }//GEN-LAST:event_submitActionPerformed

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        
        String id=search_txt.getText();                      
        boolean empIdValid=checkId(id);        
        if(empIdValid==true)
        {
            try{
                String q="SELECT * from empdetails where empid = '"+id+"'";
                pst=con.prepareStatement(q);
                rs=pst.executeQuery();
              //  jTable1.setModel(DbUtils.resultSetToTableModel(rs)); 
                
              
                if(rs.next())
                {                
                    id_lbl.setText(rs.getString("empid"));
                    nicbox.setText(rs.getString("nic"));
                    namebox.setText(rs.getString("name"));
                    dobbox.setDate(rs.getDate("dob"));
                    //dobbox.setText(rs.getString("dob"));
                    gen_box.setSelectedItem(rs.getString("gender"));
                    addressbox.setText(rs.getString("address"));
                    contact_nobox.setText(rs.getString("contact_number"));
                    emailbox.setText(rs.getString("email"));
                    jobbox.setText(rs.getString("job"));                
                    bsalbox.setText(rs.getString("bsal"));
                    //
                    dojbox.setDate(rs.getDate("doj"));
                    shiftc.setSelectedItem(rs.getString("shift"));               
                    String pat=rs.getString("image");
                    String mpath=pat.replace("@","\\");
                    pic.setIcon(ResiziseImage(mpath));
                    path=mpath;
                    
                }
             }
            catch(Exception e)
            {
                System.out.println("Error in searching at Reg"+e);
                System.out.println(e.getMessage());
            }
                      
        }
        else
        {
            JOptionPane.showMessageDialog(null,"Invalid Employee ID","Alert",JOptionPane.WARNING_MESSAGE);
        }
          
              
    }//GEN-LAST:event_searchActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        
                          
    }//GEN-LAST:event_jTable1MouseClicked

    private void search_txtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_search_txtKeyReleased

        
        // TODO add your handling code here:
    }//GEN-LAST:event_search_txtKeyReleased

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        if(search_txt.getText().equals("")){
               JOptionPane.showMessageDialog(this,"Please enter Employee Id");
               return;
        }
        int y=JOptionPane.showConfirmDialog(null, "Do you want to delete ?");
        
        if(y==0)
        {
            String id=id_lbl.getText();           
            String nic=nicbox.getText();
            String name=namebox.getText();
            //String dob=dobbox.getText();
            
            SimpleDateFormat myformat=new SimpleDateFormat("yyyy-MM-dd");
            String dob=myformat.format(dobbox.getDate());
                        
            String gender=gen_box.getSelectedItem().toString();
            String address=addressbox.getText();
            String con_no=contact_nobox.getText();
            String email=emailbox.getText();
            String job=jobbox.getText();
            String bsal=bsalbox.getText();
            
            SimpleDateFormat myformat2=new SimpleDateFormat("yyyy-MM-dd");
            String doj=myformat2.format(dojbox.getDate());
 
            String shift=shiftc.getSelectedItem().toString();
            
            String cdate=new SimpleDateFormat("MM/dd/yyyy").format(Calendar.getInstance().getTime());

            
            String q1="INSERT INTO left_emp_details (empid,nic,name,dob,gender,address,contact_number,email,job,bsal,doj,Shift,ldate) values ('"+id+"','"+nic+"','"+name+"','"+dob+"','"+gender+"','"+address+"','"+con_no+"','"+email+"','"+job+"','"+bsal +"','"+doj+"','"+shift +"','"+cdate+"')";
            String q2="delete from empdetails where empid='"+id+"'";
            
            try{
                pst=con.prepareStatement(q1);
                pst.execute();
                
                //detele emp
                pst=con.prepareStatement(q2);
                pst.execute();
                JOptionPane.showMessageDialog(this,"Successfully deleted");
            
                //load table
                 tableload();
                Reset();
        
            
            }
            catch(Exception e)
            {
                System.out.println("Error in deleting");
                System.out.println(e.getMessage());
                
            }
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_DeleteActionPerformed

    private void ClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearActionPerformed

      Reset();
        // TODO add your handling code here:
    }//GEN-LAST:event_ClearActionPerformed

    private void UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateActionPerformed
     if(search_txt.getText().equals("")){
               JOptionPane.showMessageDialog(this,"Please enter Employee Id");
               return;
        }
         
    int x=JOptionPane.showConfirmDialog(null,"Do you want to update ?");
    if(x==0)
        {
        if(nicbox.getText().equals("")){
               JOptionPane.showMessageDialog(this,"Enter NIC");
               return;
        }
        if(!(nicbox.getText().trim().matches("^[0-9]{9}[vVxX]$")))
        {
             JOptionPane.showMessageDialog(null,"Invalid NIC ");
             return;
        }
        if(namebox.getText().equals("")){
               JOptionPane.showMessageDialog(this,"Enter Name");
               return;
        }
              
        if(dobbox.getDate()==null){
               JOptionPane.showMessageDialog(this,"Enter DOB");
               return;
        }
        if (gen_box.getSelectedItem().equals("Select Gender")) {
                JOptionPane.showMessageDialog( this, "Select gender");
                return;
        }
        if(addressbox.getText().equals("")){
               JOptionPane.showMessageDialog(this,"Enter address");
               return;
        }
        if(contact_nobox.getText().equals("")){
               JOptionPane.showMessageDialog(this,"Enter Contact Number");
               return;
        }
        if(emailbox.getText().equals("")){
               JOptionPane.showMessageDialog(this,"Enter email");
               return;
        }
        if(jobbox.getText().equals("")){
               JOptionPane.showMessageDialog(this,"Enter Job");
               return;
        }
        if(bsalbox.getText().equals("")){
               JOptionPane.showMessageDialog(this,"Enter Basic Salary");
               return;
        }
        if(dojbox.getDate()==null){
               JOptionPane.showMessageDialog(this,"Enter Date Of Join");
               return;
        }
        if (shiftc.getSelectedItem().equals("Select Shift")) {
                JOptionPane.showMessageDialog( this, "Select Shift");
                return;
        }
        if(!validate(emailbox.getText()))
        {
            JOptionPane.showMessageDialog( this, "Invaid Email");
            return;
        } 
                                   
        String id=id_lbl.getText();
        String nic=nicbox.getText();
        String name=namebox.getText();
        //String dob=dobbox.getText();
        SimpleDateFormat myformat=new SimpleDateFormat("yyyy-MM-dd");
        String dob=myformat.format(dobbox.getDate());
        
        String gender=gen_box.getSelectedItem().toString();
        String address=addressbox.getText();
        String con_no=contact_nobox.getText();
        String email=emailbox.getText();
        String job=jobbox.getText();
        String bsal=bsalbox.getText();
    
        SimpleDateFormat myformat2=new SimpleDateFormat("yyyy-MM-dd");
        String doj=myformat2.format(dojbox.getDate());
    
        String shift=shiftc.getSelectedItem().toString();
        String mpath=path.replace("\\","@");
        
        String sql="UPDATE empdetails SET nic='"+nic+"',name='"+ name+"',dob='"+dob+"',gender='"+gender+"',address='"+address+"',contact_number='"+con_no+"',email='"+email+"',job='"+job+"',bsal='"+bsal+"',doj='"+doj+"',Shift='"+shift+"',Image='"+mpath+"' where empid='"+id+"'";
        
        try{
        pst=con.prepareStatement(sql);
        pst.execute();
        JOptionPane.showMessageDialog(this,"Successfully updated");
        
        //load table
        tableload();
        
        }
        catch(Exception e)
        {
            System.out.println("error in updating");
            System.out.println(e.getMessage());
        }
        
            
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_UpdateActionPerformed

    //image add lbl
    private void AttatchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AttatchActionPerformed

        JFileChooser file= new JFileChooser();
        file.setCurrentDirectory(new File(System.getProperty("user.home")));
        FileNameExtensionFilter filter=new FileNameExtensionFilter("*.Images", "jpg","gif","png");
        file.addChoosableFileFilter(filter);
        int result=file.showSaveDialog(null);
        if(result == JFileChooser.APPROVE_OPTION){
        File SelectedFile= file.getSelectedFile();
        path=SelectedFile.getAbsolutePath();
        pic.setIcon(ResiziseImage(path));
            
        }
        else if(result == JFileChooser.CANCEL_OPTION){
            System.out.println("No File Select");
        }
        
        
        
    }//GEN-LAST:event_AttatchActionPerformed

    private void contact_noboxKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_contact_noboxKeyTyped
       
        char c=evt.getKeyChar();
         
         if(!(Character.isDigit(c))||contact_nobox.getText().length()>=10||(c==KeyEvent.VK_BACKSPACE) || (c== KeyEvent.VK_DELETE))
         {
             evt.consume();
         }

    }//GEN-LAST:event_contact_noboxKeyTyped

    private void bsalboxKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bsalboxKeyTyped
        char c=evt.getKeyChar();
         
         if(!(Character.isDigit(c))||(c==KeyEvent.VK_BACKSPACE) || (c== KeyEvent.VK_DELETE))
         {
             evt.consume();
         }
    }//GEN-LAST:event_bsalboxKeyTyped

    private void search_txtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_search_txtKeyTyped
        char c=evt.getKeyChar();
         
         if(!(Character.isDigit(c))||(c==KeyEvent.VK_BACKSPACE) || (c== KeyEvent.VK_DELETE))
         {
             evt.consume();
         }
    }//GEN-LAST:event_search_txtKeyTyped

    private void nameboxKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nameboxKeyTyped
        
        char c=evt.getKeyChar();
        if(!(Character.isAlphabetic(c))||(c==KeyEvent.VK_BACKSPACE) || (c== KeyEvent.VK_DELETE))
         {
             if(Character.isWhitespace(c))
             {                
             }
             else
             evt.consume();
         }     
    }//GEN-LAST:event_nameboxKeyTyped

    private void jobboxKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jobboxKeyTyped
        
        char c=evt.getKeyChar();
        if(!(Character.isAlphabetic(c))||(c==KeyEvent.VK_BACKSPACE) || (c== KeyEvent.VK_DELETE))
         {
             if(Character.isWhitespace(c))
             {     
                 
             }
             else
             evt.consume();
         }             
    }//GEN-LAST:event_jobboxKeyTyped

    private void nicboxKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nicboxKeyTyped
        char c=evt.getKeyChar();
         
         if(nicbox.getText().length()>=10||(c==KeyEvent.VK_BACKSPACE) || (c== KeyEvent.VK_DELETE))
         {           
             evt.consume();
         }
        
        
    }//GEN-LAST:event_nicboxKeyTyped

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        ReportView r=new ReportView("C:\\Users\\Akila Sachin\\Documents\\NetBeansProjects\\HMS\\src\\Employee\\ireportTest\\t1\\report1.jasper");
        r.setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        ReportView r=new ReportView("C:\\Users\\Akila Sachin\\Documents\\NetBeansProjects\\HMS\\src\\Employee\\ireportTest\\leftemp\\left_emp.jasper");
        r.setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Attatch;
    private javax.swing.JButton Clear;
    private javax.swing.JButton Delete;
    private javax.swing.JButton Update;
    private javax.swing.JTextField addressbox;
    private javax.swing.JTextField bsalbox;
    private javax.swing.JTextField contact_nobox;
    private com.toedter.calendar.JDateChooser dobbox;
    private com.toedter.calendar.JDateChooser dojbox;
    private javax.swing.JTextField emailbox;
    private javax.swing.JComboBox<String> gen_box;
    private javax.swing.JLabel id_lbl;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jobbox;
    private javax.swing.JTextField namebox;
    private javax.swing.JTextField nicbox;
    private javax.swing.JLabel pic;
    private javax.swing.JButton search;
    private javax.swing.JTextField search_txt;
    private javax.swing.JComboBox<String> shiftc;
    private javax.swing.JButton submit;
    // End of variables declaration//GEN-END:variables

   
    private ImageIcon format =null;
    String filename=null;
    byte[] person_image=null;

}
